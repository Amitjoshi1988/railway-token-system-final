#server.port=8084
#spring.application.name=api-gateway
#
#spring.cloud.gateway.routes[0].id=ui-service
#spring.cloud.gateway.routes[0].uri=http://localhost:8081
#spring.cloud.gateway.routes[0].predicates[0]=Path=/
#
#spring.cloud.gateway.routes[1].id=token-service
#spring.cloud.gateway.routes[1].uri=http://localhost:9091
#spring.cloud.gateway.routes[1].predicates[0]=Path=/token/**

### for standalone without docker
#server.port=8084
#spring.application.name=api-gateway
#
#spring.cloud.gateway.routes[0].id=ui-service-root
#spring.cloud.gateway.routes[0].uri=http://localhost:8085
#spring.cloud.gateway.routes[0].predicates[0]=Path=/
#
#spring.cloud.gateway.routes[1].id=ui-service-generate
#spring.cloud.gateway.routes[1].uri=http://localhost:8085
#spring.cloud.gateway.routes[1].predicates[0]=Path=/generate/**
#
#spring.cloud.gateway.routes[2].id=token-service
#spring.cloud.gateway.routes[2].uri=http://localhost:9091
#spring.cloud.gateway.routes[2].predicates[0]=Path=/token/**

## with docker 
server.port=8084
spring.application.name=api-gateway

# Docker-friendly routing (use service/container names)
spring.cloud.gateway.routes[0].id=ui-service-root
spring.cloud.gateway.routes[0].uri=http://ui-service:8085
spring.cloud.gateway.routes[0].predicates[0]=Path=/

spring.cloud.gateway.routes[1].id=ui-service-generate
spring.cloud.gateway.routes[1].uri=http://ui-service:8085
spring.cloud.gateway.routes[1].predicates[0]=Path=/generate/**

spring.cloud.gateway.routes[2].id=token-service
spring.cloud.gateway.routes[2].uri=http://token-service:9091
spring.cloud.gateway.routes[2].predicates[0]=Path=/token/**
